setup:
  files:
    - path: https://example.com/libs/my-lib.gflowslib
      copy: e2e/gflowslibs/jsonnet/my-lib.gflowslib
    - path: https://example.com/libs/workflows/steps.libsonnet
      copy: e2e/gflowslibs/jsonnet/workflows/steps.libsonnet
    - path: .gflows/config.yml
      # TODO: target master branch in link below (or make configurable)
      content: |
        templates:
          engine: jsonnet
          defaults:
            libs:
            - https://example.com/libs/my-lib.gflowslib
    - path: .gflows/workflows/test.jsonnet
      content: |
        local steps = import 'workflows/steps.libsonnet';
        local workflow = {
          'on': {
            push: {},
          },
          jobs: {
            test: {
              'runs-on': 'ubuntu-latest',
              steps: [
                steps.run('echo Hello World!!!')
              ],
            },
          },
        };
        std.manifestYamlDoc(workflow)

run: update

expect:
  output: |2
         create .github/workflows/test.yml (from .gflows/workflows/test.jsonnet)

  files:
  - path: .gflows/config.yml
  - path: .gflows/workflows/test.jsonnet
  - path: .github/workflows/test.yml
    content: |
      # File generated by gflows, do not modify
      # Source: .gflows/workflows/test.jsonnet
      "jobs":
        "test":
          "runs-on": "ubuntu-latest"
          "steps":
          - "run": "echo Hello World!!!"
      "on":
        "push": {}
      
