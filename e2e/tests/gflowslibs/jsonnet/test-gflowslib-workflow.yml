setup:
  files:
    - path: https://example.com/my-lib.gflowslib
      content: |
        {
          "files": [
            "libs/common/steps.libsonnet",
            "workflows/test.jsonnet"
          ]
        }
    - path: https://example.com/libs/common/steps.libsonnet
      content: |
        {
          run(command):: {
            run: command
          }
        }
    - path: https://example.com/workflows/test.jsonnet
      content: |
        local steps = import 'common/steps.libsonnet';
        local workflow = {
          'on': {
            push: {},
          },
          jobs: {
            test: {
              'runs-on': 'ubuntu-latest',
              steps: [
                steps.run('echo Hello World!!!')
              ],
            },
          },
        };
        std.manifestYamlDoc(workflow)
    - path: .gflows/config.yml
      content: |
        templates:
          engine: jsonnet
          defaults:
            libs:
            - https://example.com/my-lib.gflowslib

run: update

expect:
  output: |2
         create .github/workflows/test.yml (from my-lib.gflowslib/workflows/test.jsonnet)

  files:
  - path: .gflows/config.yml
  - path: .github/workflows/test.yml
    content: |
      # File generated by gflows, do not modify
      # Source: my-lib.gflowslib/workflows/test.jsonnet
      "jobs":
        "test":
          "runs-on": "ubuntu-latest"
          "steps":
          - "run": "echo Hello World!!!"
      "on":
        "push": {}
      
